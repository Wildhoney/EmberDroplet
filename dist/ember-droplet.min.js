"use strict";function _toConsumableArray(e){if(Array.isArray(e)){for(var t=0,r=Array(e.length);t<e.length;t++)r[t]=e[t];return r}return Array.from(e)}!function(e,t,r){var i,n,s,a,o,u=t.Mixin,l=t.String,p=t.computed,c=t.get,f=t.set,d=t.run,h={NONE:0,VALID:1,INVALID:2,DELETED:4,UPLOADED:8,FAILED:16},m={PATCH:"PATCH",POST:"POST",PUT:"PUT"},g="droplet/add-files",y=function(e){return"function"==typeof Array.from?Array.from(e):Array.prototype.slice.call(e)},v=t.Service.extend(t.Evented,{publish:function(){this.trigger.apply(this,arguments)},subscribe:function(){this.on.apply(this,arguments)},unsubscribe:function(){this.off.apply(this,arguments)}});t.Application.initializer({name:"load-services",initialize:function(e,t){var r=v.create();t.register("event-bus:current",r,{instantiate:!1}),t.inject("component","DropletEventBus","event-bus:current"),t.inject("controller","DropletEventBus","event-bus:current")}});var b=t.Object.extend({init:function(){this.statusType=h.NONE},getMIMEType:function(){return this.file.type||""},getFileSize:function(){return"undefined"!=typeof this.file.size?this.file.size:1/0},setStatusType:function(e){this.set("statusType",Number(e))}}),A={PUSH:"push",SET:"set"},D={requestMethod:m.POST,maximumSize:1/0,maximumValidFiles:1/0,uploadImmediately:!1,includeXFileSize:!0,useArray:!1,mimeTypes:["image/jpeg","image/jpg","image/gif","image/png","image/tiff","image/bmp"],requestHeaders:{},requestPostData:{}},E=l.w("files.length files.@each.statusType"),F={URL_REQUIRED:"Droplet: You must specify the URL parameter when constructing your component."};e.Droplet=u.create({url:function(){throw new Error(F.URL_REQUIRED)},model:b,options:{},hooks:{},files:[],statusTypes:h,init:function(){var e=this;f(this,"files",[]);var r=t.merge({},this.get("hooks"));f(this,"hooks",r);var i=t.merge({},D);t.merge(i,this.get("options")),f(this,"options",i),this.DropletEventBus&&this.DropletEventBus.subscribe(g,this,function(){for(var t=arguments.length,r=Array(t),i=0;t>i;i++)r[i]=arguments[i];e.send.apply(e,["prepareFiles"].concat(r))}),this._super()},willDestroy:function(){this._super();var e=this.get("lastRequest");e&&(delete e.upload.onprogress,delete e.upload.onload,delete e.upload.onerror,this.send("abortUpload"))},invokeHook:function(e){for(var r=this,i=arguments.length,n=Array(i>1?i-1:0),s=1;i>s;s++)n[s-1]=arguments[s];var a=c(this,"hooks")[e]||function(){};t.run(function(){return a.apply(r,n)})},uploadStatus:p(function(){return{uploading:!1,percentComplete:0,error:!1}}),validFiles:(i=p(function(){return this.getFiles(h.VALID)})).property.apply(i,_toConsumableArray(E)),invalidFiles:(n=p(function(){return this.getFiles(h.INVALID)})).property.apply(n,_toConsumableArray(E)),uploadedFiles:(s=p(function(){return this.getFiles(h.UPLOADED)})).property.apply(s,_toConsumableArray(E)),deletedFiles:(a=p(function(){return this.getFiles(h.DELETED)})).property.apply(a,_toConsumableArray(E)),requestSize:(o=p(function(){return c(this,"validFiles").reduce(function(e,t){return e+t.getFileSize()},0)})).property.apply(o,_toConsumableArray(E)),getFiles:function(e){return e?this.files.filter(function(t){return t.statusType&e}):this.files},isValid:function T(e){var r=this;if(!(e instanceof t.Object))return!1;var i=function(e){return function(){var t=r.get("options.mimeTypes").some(function(e){return e instanceof RegExp}),i=c(r,"options.mimeTypes");return t?i.some(function(t){var r=t===e,i=!!e.match(t);return r||i}):!!~i.indexOf(e)}},n=function(e){return function(){return e<=Number(c(r,"options.maximumSize"))}},s=function(){for(var e=arguments.length,t=Array(e),r=0;e>r;r++)t[r]=arguments[r];return function(e){return t.reverse().every(function(t){return t(e)})}},T=s(i(e.getMIMEType()),n(e.getFileSize()));return T(e)},getFormData:function(){var t=new e.FormData,r=this.get("options.useArray")?"file[]":"file",i=this.get("options.requestPostData"),n=c(this,"validFiles").map(function(e){return e.file});return n.forEach(function(e){t.append(r,e)}),Object.keys(i).forEach(function(e){t.append(e,i[e])}),t},addProgressListener:function(e){var t=this;e.addEventListener("progress",function(e){if(e.lengthComputable){var r=e.loaded/c(t,"requestSize")*100;f(t,"uploadStatus.percentComplete",Math.round(r))}})},getRequest:function(){var e=this,r=function(e){return"function"==typeof e},i=r(c(this,"url"))?c(this,"url").apply(this):c(this,"url"),n=c(this,"options.requestMethod")||"POST",s=this.getFormData(),a=t.merge({},this.get("options.requestHeaders"));c(this,"options.includeXFileSize")&&(a["X-File-Size"]=this.get("requestSize"));var o=t.$.ajax({url:i,method:n,headers:a,data:s,processData:!1,contentType:!1,xhr:function u(){var u=t.$.ajaxSettings.xhr();return e.addProgressListener(u.upload),f(e,"lastRequest",u),u}});return f(this,"lastResolver",o),o},actions:{uploadFiles:function(){var e=this,r=c(this,"files").filter(function(e){return e.statusType&h.VALID});if(0===r.length)return!1;var i=this.getRequest();f(this,"abortedUpload",!1),f(this,"uploadStatus.percentComplete",0),f(this,"uploadStatus.uploading",!0),f(this,"uploadStatus.error",!1);var n=function(t,n){e.invokeHook("promiseResolver",t,n,r),i.done(t).fail(n)},s=function(t){e.invokeHook("didUpload",t),r.map(function(e){return e.setStatusType(h.UPLOADED)})},a=function(t){var r=t.request,i=t.textStatus,n=t.errorThrown;c(e,"abortedUpload")!==!0&&f(e,"uploadStatus.error",{request:r,textStatus:i,errorThrown:n})},o=function(){f(e,"uploadStatus.uploading",!1),e.invokeHook("didComplete")};return new t.RSVP.Promise(n).then(s,a)["finally"](o)},abortUpload:function(){var e=c(this,"lastResolver");e&&c(this,"uploadStatus.uploading")&&(f(this,"abortedUpload",!0),e.abort(),f(this,"uploadStatus.uploading",!1))},mimeTypes:function(e){var t=arguments.length<=1||void 0===arguments[1]?A.PUSH:arguments[1];t===A.SET&&f(this,"options.mimeTypes",[]),e=Array.isArray(e)?e:[e];var r=[].concat(_toConsumableArray(c(this,"options.mimeTypes")),_toConsumableArray(e));f(this,"options.mimeTypes",r)},addFiles:function(){for(var e=this,r=arguments.length,i=Array(r),n=0;r>n;n++)i[n]=arguments[n];var s=i.map(function(r){var i=e.get("validFiles.length")===e.get("options.maximumValidFiles");if(r instanceof t.Object){var n=function(){var t=e.isValid(r)&&!i?h.VALID:h.INVALID;return d(function(){return r.setStatusType(t)}),c(e,"files").pushObject(r),{v:r}}();if("object"==typeof n)return n.v}}).filter(function(e){return"undefined"!=typeof e});s.length&&this.invokeHook.apply(this,["didAdd"].concat(_toConsumableArray(s))),this.get("options.uploadImmediately")&&this.send.apply(this,["uploadFiles"].concat(_toConsumableArray(s)))},prepareFiles:function(){for(var e=arguments.length,t=Array(e),r=0;e>r;r++)t[r]=arguments[r];t=y(t);var i=t.reduce(function(e,t){var r=b.create({file:t});return e.push(r),e},[]);return this.send.apply(this,["addFiles"].concat(_toConsumableArray(i))),i},deleteFiles:function(){for(var e=this,t=arguments.length,r=Array(t),i=0;t>i;i++)r[i]=arguments[i];var n=r.map(function(t){var r=!!~c(e,"files").indexOf(t);return r?(t.setStatusType(h.DELETED),t):void 0}).filter(function(e){return"undefined"!=typeof e});n.length&&this.invokeHook.apply(this,["didDelete"].concat(_toConsumableArray(n)))},clearFiles:function(){var e=this,t=[].concat(_toConsumableArray(this.get("validFiles")),_toConsumableArray(this.get("invalidFiles")));t.forEach(function(t){return e.send("deleteFiles",t)})}}});var S=function(e){e.preventDefault(),e.stopPropagation()};e.Droplet.Area=u.create({classNames:["droppable"],drop:function(e){return S(e),this.handleFiles(e.dataTransfer.files)},handleFiles:function(e){var t;return this.DropletEventBus&&(t=this.DropletEventBus).publish.apply(t,[g].concat(_toConsumableArray(y(e)))),e},dragEnter:S,dragOver:S,dragLeave:S}),e.Droplet.Preview=u.create({tagName:"img",attributeBindings:["src"],reader:r,image:{file:{type:""}},isImage:function(e){return!!e.type.match(/^image\//i)},didInsertElement:function(){var e=this,t=this.get("reader"),r=new t,i=c(this,"image.file");return this.isImage(i)?(r.addEventListener("load",d.bind(this,function(t){e.get("isDestroyed")!==!0&&f(e,"src",t.target.result)})),void r.readAsDataURL(i)):void this.destroy()}}),e.Droplet.MultipleInput=u.create({tagName:"input",classNames:"files",attributeBindings:["disabled","name","type","multiple"],type:"file",multiple:"multiple",change:function(){var e=this.get("element").files;this.handleFiles(e)},handleFiles:function(e){var t;this.DropletEventBus&&(t=this.DropletEventBus).publish.apply(t,[g].concat(_toConsumableArray(y(e))))}}),e.Droplet.SingleInput=u.create(e.Droplet.MultipleInput,{multiple:!1}),e.Droplet.METHOD=m}(window,window.Ember,window.FileReader);